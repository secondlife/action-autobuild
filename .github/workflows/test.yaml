name: Test

on:
  pull_request:
  push:
    branches: [main]
    tags: [v*]

jobs:
  test:
    strategy:
      matrix:
        os: [windows-2022, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      AUTOBUILD_CONFIGURATION: default
    steps:

      - name: Disable autocrlf
        shell: bash
        env:
          WINDOWS: ${{ runner.os == 'Windows' }}
        run: |
          if [[ $WINDOWS == 'true' ]]; then
            git config --global core.autocrlf input
          fi

      - uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --tags --force

      - uses: ./
        with:
          artifact-name: autobuild-${{ matrix.os }}
          checkout: false

      - shell: bash
        run: rm -rf stage

      - uses: ./
        with:
          artifact-name: autobuild-scm-${{ matrix.os }}
          checkout: false
          file: autobuild-scm.xml

      # Test git-based autobuild install
      - uses: ./
        with:
          artifact-name: autobuild-git-${{ matrix.os }}
          autobuild-version: main
          checkout: false

      # Test alternative compression-format
      - uses: ./
        with:
          artifact-name: autobuild-tbz2-${{ matrix.os }}
          archive-format: tbz2
          checkout: false
      - name: Check bz2 package
        shell: bash
        run: ls *.tar.bz2 >/dev/null || exit "Expected .tar.bz2 package"

      # Test custom python version
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - uses: ./
        with:
          artifact-name: autobuild-py310-${{ matrix.os }}
          setup-python: false
      - name: Check python version
        shell: bash
        run: |
          ver="$(python --version)"
          [[ "$ver" == "Python 3.10."* ]] || exit "Expected python 3.10, got $ver"
